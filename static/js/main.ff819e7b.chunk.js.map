{"version":3,"sources":["store/constants/products.js","store/actions/products.js","components/Products/index.jsx","components/Basket/index.jsx","App.js","reportWebVitals.js","store/reducers/products.js","store/reducers/index.js","store/index.js","index.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","addProduct","payload","type","constants","removeProduct","Products","props","onRemove","bind","onAdd","event","id","target","dataset","this","products","find","product","count","className","map","name","price","onClick","React","Component","connect","store","items","actions","Basket","useSelector","filter","reduce","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","state","action","item","createStore","reducers","applyMiddleware","next","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff819e7b.chunk.js","sourcesContent":["export const ADD_PRODUCT = \"Добавить продукт\";\r\nexport const REMOVE_PRODUCT = \"Убрать продукт\";","import * as constants from \"../constants/products\";\r\n\r\nexport const addProduct = (payload) => ({\r\n    type: constants.ADD_PRODUCT,\r\n    payload,\r\n});\r\n\r\nexport const removeProduct = (payload) => ({\r\n    type: constants.REMOVE_PRODUCT,\r\n    payload,\r\n});","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/products\";\r\nimport \"./index.css\";\r\n\r\nclass Products extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onRemove = this.onRemove.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n    }\r\n\r\n    onRemove(event) {\r\n        const { id } = event.target.dataset;\r\n        const product = this.props.products.find((product) => product.id === id);\r\n\r\n        if (product.count >= 1) {\r\n            this.props.removeProduct({ id });\r\n        }\r\n    }\r\n\r\n    onAdd(event) {\r\n        const { id } = event.target.dataset;\r\n        this.props.addProduct({ id });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"products\">\r\n            <h1 className=\"products__caption\">Продукты</h1>\r\n            {this.props.products.map((product) => (\r\n                <div className=\"product\" key={product.name}>\r\n                    <div className=\"product__name\">\r\n                    {product.name} - ${product.price}\r\n                    </div>\r\n                    <div className=\"product__buttons-wrapper\">\r\n                        <button data-id={product.id} onClick={this.onRemove}>\r\n                        -\r\n                        </button>\r\n                        <div>\r\n                            <span>{product.count || \"\"}</span>\r\n                        </div>\r\n                        <button data-id={product.id} onClick={this.onAdd}>\r\n                        +\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((store) => {\r\n    return{\r\n        products: store.products.items,\r\n    };\r\n}, actions)(Products);\r\n\r\n//Функциональный компонент\r\n// export default function Products() {\r\n//     const dispatch = useDispatch();\r\n//     const products = useSelector((store) => store.products.items);\r\n\r\n//     const onAdd = (event) => {\r\n//         const { id } = event.target.dataset;\r\n\r\n//         dispatch (actions.addProduct({ id }));\r\n//     };\r\n\r\n//     const onRemove = (event) => {\r\n//         const { id } = event.target.dataset;\r\n//         const product = products.find((product) => product.id === id);\r\n\r\n//         if (product.count >= 1) {\r\n//             dispatch (actions.removeProduct({ id }));\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"products\">\r\n//         <h1 className=\"products__caption\">Продукты</h1>\r\n//         {products.map((product) => (\r\n//             <div className=\"product\" key={product.name}>\r\n//                 <div className=\"product__name\">\r\n//                 {product.name} - ${product.price}\r\n//                 </div>\r\n//                 <div className=\"product__buttons-wrapper\">\r\n//                     <button data-id={product.id} onClick={onRemove}>\r\n//                     -\r\n//                     </button>\r\n//                     <div>\r\n//                         <span>{product.count || \"\"}</span>\r\n//                     </div>\r\n//                     <button data-id={product.id} onClick={onAdd}>\r\n//                     +\r\n//                     </button>\r\n//                 </div>\r\n//             </div>\r\n//         ))}\r\n//         </div>\r\n//     );\r\n// }","import { useSelector } from \"react-redux\";\r\nimport \"./index.css\";\r\n\r\nexport default function Basket() {\r\n    const products = useSelector((store) => store.products.items);\r\n    const price = products\r\n        .filter((product) => !!product.count)\r\n        .map((product) => product.price * product.count)\r\n        .reduce((a,b) => a + b, 0);\r\n\r\n    return price ? (\r\n        <button className=\"basket\">Перейти к оплате (${price})</button>\r\n    ) : null;\r\n}","import Products from \"./components/Products\";\nimport Basket from \"./components/Basket\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Products />\n      <Basket />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as constants from \"../constants/products\";\r\n\r\nconst initialState = {\r\n    items: [\r\n        { id: \"№1\", name: \"Чарльз Петцольд - Код \", price: 20, count: 0 },\r\n        { id: \"№2\", name: \"Марейн Хавербеке - Выразительный JavaScript \", price: 25, count: 0 },\r\n        { id: \"№3\", name: \"Роберт Мартин - Чистый код \", price: 12, count: 0 },\r\n        { id: \"№4\", name: \"Джон Даккет - JavaScript и JQuery \", price: 15, count: 0 },\r\n        { id: \"№5\", name: \"Барбара Оакли - Думай как математик \", price: 10, count: 0 },\r\n    ],\r\n};\r\n\r\nexport default function productsReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n\r\n        case constants.ADD_PRODUCT:\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => {\r\n                    if (item.id === payload.id) {\r\n                        return {\r\n                            ...item,\r\n                            count: item.count + 1,\r\n                        };\r\n                    }\r\n                    return item;\r\n                }),\r\n            };\r\n        \r\n        case constants.REMOVE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => {\r\n                    if (item.id === payload.id) {\r\n                        return {\r\n                            ...item,\r\n                            count: item.count - 1,\r\n                        };\r\n                    }\r\n                    return item;\r\n                }),\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport products from \"./products\";\r\n\r\nexport default combineReducers({\r\n    products,\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst logger = (store) => (next) => (action) => {\r\n    console.log(\"Предыдущее состояние\", store.getState());\r\n    console.log(\"Экшен\", action.type);\r\n    next(action);\r\n    console.log(\"Новое состояние\", store.getState());\r\n};\r\n\r\nexport default createStore(reducers, applyMiddleware(logger));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}