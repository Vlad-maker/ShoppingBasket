{"version":3,"sources":["components/Products/index.jsx","components/Basket/index.jsx","App.js","reportWebVitals.js","store/index.jsx","index.js"],"names":["Products","dispatch","useDispatch","products","useSelector","store","items","onAdd","event","id","target","dataset","type","payload","onRemove","find","product","count","className","map","name","price","onClick","Basket","filter","reduce","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createStore","state","action","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18237c9d.chunk.js","sourcesContent":["import { useSelector, useDispatch} from \"react-redux\";\r\nimport \"./index.css\";\r\n\r\nexport default function Products() {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector((store) => store.items);\r\n\r\n    const onAdd = (event) => {\r\n        const { id } = event.target.dataset;\r\n\r\n        dispatch ({\r\n            type: \"Добавить продукт\",\r\n            payload: { id },\r\n        });\r\n    };\r\n\r\n    const onRemove = (event) => {\r\n        const { id } = event.target.dataset;\r\n        const product = products.find((product) => product.id === id);\r\n\r\n        if (product.count >= 1) {\r\n            dispatch ({\r\n                type: \"Убрать продукт\",\r\n                payload: { id },\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"products\">\r\n        <h1 className=\"products__caption\">Продукты</h1>\r\n        {products.map((product) => (\r\n            <div className=\"product\" key={product.name}>\r\n                <div className=\"product__name\">\r\n                {product.name} - ${product.price}\r\n                </div>\r\n                <div className=\"product__buttons-wrapper\">\r\n                    <button data-id={product.id} onClick={onRemove}>\r\n                    -\r\n                    </button>\r\n                    <div>\r\n                        <span>{product.count || \"\"}</span>\r\n                    </div>\r\n                    <button data-id={product.id} onClick={onAdd}>\r\n                    +\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n    );\r\n}","import { useSelector } from \"react-redux\";\r\nimport \"./index.css\";\r\n\r\nexport default function Basket() {\r\n    const products = useSelector((store) => store.items);\r\n    const price = products\r\n        .filter((product) => !!product.count)\r\n        .map((product) => product.price * product.count)\r\n        .reduce((a,b) => a + b, 0);\r\n\r\n    return price ? (\r\n        <button className=\"basket\">Перейти к оплате (${price})</button>\r\n    ) : null;\r\n}","import Products from \"./components/Products\";\nimport Basket from \"./components/Basket\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Products />\n      <Basket />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n    items: [\r\n        { id: \"№1\", name: \"Чарльз Петцольд - Код \", price: 20, count: 0 },\r\n        { id: \"№2\", name: \"Марейн Хавербеке - Выразительный JavaScript \", price: 25, count: 0 },\r\n        { id: \"№3\", name: \"Роберт Мартин - Чистый код \", price: 12, count: 0 },\r\n        { id: \"№4\", name: \"Джон Даккет - JavaScript и JQuery \", price: 15, count: 0 },\r\n        { id: \"№5\", name: \"Барбара Оакли - Думай как математик \", price: 10, count: 0 },\r\n    ],\r\n};\r\n\r\nfunction myReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n\r\n        case \"Добавить продукт\":\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => {\r\n                    if (item.id === payload.id) {\r\n                        return {\r\n                            ...item,\r\n                            count: item.count + 1,\r\n                        };\r\n                    }\r\n                    return item;\r\n                }),\r\n            };\r\n        \r\n        case \"Убрать продукт\":\r\n            return {\r\n                ...state,\r\n                items: state.items.map((item) => {\r\n                    if (item.id === payload.id) {\r\n                        return {\r\n                            ...item,\r\n                            count: item.count - 1,\r\n                        };\r\n                    }\r\n                    return item;\r\n                }),\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default createStore(myReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}